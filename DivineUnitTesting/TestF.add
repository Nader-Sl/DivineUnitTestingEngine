_G.TestF = {}  -- THIS STRUCT SHOULD BE DEFINED IN THE _G ENV AND SHOULD MATCH WITH THE TEST FILE'S NAME AND SHOULD HOLD ALL THE FUNCTIONS AND CALLBACKS DEFINED IN THIS FILE.

{{ INITIALIZE ALL CONSTANTS HERE! ]]--
-- TestF.name = "Test F" -- REQUIRED FIELD
-- TestF.desc = "This is a Description for TestF" --REQUUIRED FIELD

[[
-- INITIALIZE ALL VARIABLES IN THE INIT METHOD TO AVOID VALUES CACHING, WHEN TEST IS RAN AGAIN THIS METHOD IS CALLED AGAIN TO RE INITIALIZE THE VALS.
-- ]]
-- function TestF.Init()
-- TestF.dependencies = {_G.TestF,_G.TestF}  -- REQUIRED FIELD (MUST BE DEFINED IN INIT())
-- TestF.status = UNKNOWN -- REQUIRED FIELD, should be set within a callback to either SUCCESS or FAIL to mark its result after a certain check.
-- TestF.i = 0
-- end

 [[
   -- DEFINE BOL 2.0 CALLBACK FUNCTIONS IN THE TEST'S STRUCT CONTEXT (function names should exactly match BoL 2.0's Callback names)
   -- {Tick,Draw,etc..} 
   -- ]]
-- function TestF.Tick()
-- TestF.i = TestF.i + 1
-- if TestF.i >= 50 then TestF.status = math.random(1,10) < 5 and SUCCESS or FAIL end -- randomly mark the module's status to SUCCESS or FAIL
-- end

-- function TestF.Draw()

 -- Graphics.DrawText("Tick Count : "..TestF.i, 12, 100,100, Graphics.ARGB(255,255,255,255))

-- end

